obs <- c(315, 108, 101, 32)
exp <- c(9/16, 3/16, 3/16, 1/16)
#chi square
chisq.test(x=obs, p=exp)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
HW3 <- read_csv("Desktop/R_sc/HW3.csv")
View(HW3)
#open data set
HW3 <- read_csv("Desktop/R_sc/HW3.csv")
swearing <- HW3$Swearing
clean <- HW3$`Not Swearing`
#paired t-test
t.test(swearing, clean, paired = TRUE)
#correlation test
cor.test(swearing, clean)
#unpaired t-test
t.test(swearing, clean, var.equal = TRUE)
#linear regression
lm(swearing, clean)
?lm
lm(formula = swearing ~ clean, data = HW3)
> t.test(swearing, clean,alternative = "greater", paired = TRUE)
t.test(swearing, clean,alternative = "greater", paired = TRUE)
t.test(swearing, clean,alternative = "less", paired = TRUE)
View(swearing)
View(clean)
library(readr)
linear <- read_csv("Desktop/linear.csv")
View(linear)
library(readr)
linear <- read_csv("Desktop/linear.csv",
col_names = FALSE)
View(linear)
?lm
lm(X1~X2)
X <- vector(X1)
x <- linear$X1
y <- linear$X2
lm(formula=x~y, data = linear)
regression <- lm(y~x)
print(regression)
print(summary(regression))
#linear regression
linear <- read_csv("Desktop/linear.csv")
#linear regression
linear <- read_csv("Desktop/linear.csv",
+     col_names = FALSE)
library(readr)
linear <- read_csv("Desktop/linear.csv",
col_names = FALSE)
View(linear)
#linear regression
x <- linear$X1
y <- linear$X2
regression <- lm(y~x)
print(regression)
print(summary(regression))
#confidence interval
confint(fit, 'body.weight', level=0.95)
#confidence interval
confint(fit, 'x', level=0.95)
#confidence interval
confint(regression, 'x', level=0.95)
confint(regression, "x", level = .95)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
MultipleR <- read_csv("Desktop/R_sc/MultipleR.csv")
View(MultipleR)
#multiple regression
x <- c(Bloodfat)
x <- c(MultipleR$BloodFat)
y <- c(MultipleR$Weight)
z <- c(MultipleR$Age)
lm(x~ y + z)
regression <- lm(x~y+z)
print(summary(regression))
#w/interaction
regression <- lm(x~y+z+yz)
#w/interaction
regression <- lm(x~y+z+(y*z))
print(summary(regression))
regression1 <- lm(x~y+z)
anova(regression1, regression)
print(summary(regression1))
anova(regression, regression1)
library(readr)
MultipleR <- read_csv("Desktop/R_sc/MultipleR.csv")
View(MultipleR)
#multiple regression
y <- c(MultipleR$BloodFat)
x <- c(MultipleR$Age)
z <- c(MultipleR$Weight)
regression1 <- lm(y~x+z, data=MultipleR)
print(summary(regression1))
rm(y)
rm(x)
rm(z)
#multiple regression
rm(MultipleR)
rm(regression1)
library(readr)
MultipleR <- read_csv("Desktop/R_sc/MultipleR.csv")
View(MultipleR)
rm(MultipleR)
library(readr)
LogisticR <- read_csv("Desktop/R_sc/LogisticR.csv")
View(LogisticR)
#factor
status <- c(LogisticR$status)
a <- c(LogisticR$A)
b <- c(LogisticR$B)
d <- factor(LogisticR$D)
f <- factor(LogisticR$F)
g <- c(LogisticR$G)
i <- c(LogisticR$I)
k <- c(LogisticR$K)
l <- c(LogisticR$L)
m <- c(LogisticR$M)
#logistic regression
fit <- glm(status~a+b+d+f+g+i+k+l+m, data = LogisticR, family = binomial())
summary(fit)
View(d)
migration <- LogisticR$D
factmigration <- factor(migration)
rm(migration)
rm(factmigration)
LogisticR$dfact <- factor(LogisticR$D)
rm(d)
rm(f)
LogisticR$ffact <- factor(LogisticR$F)
library(readr)
LogisticR <- read_csv("Desktop/R_sc/LogisticR.csv")
View(LogisticR)
#factor
status <- c(LogisticR$status)
a <- c(LogisticR$A)
b <- c(LogisticR$B)
d <- c(LogisticR$D)
d.fact = factor(d)
f <- c(LogisticR$F)
f.fact = factor(f)
g <- c(LogisticR$G)
i <- c(LogisticR$I)
k <- c(LogisticR$K)
l <- c(LogisticR$L)
m <- c(LogisticR$M)
glm(status~a+b+d.fact+f.fact+g+i+k+l+m, family = binomial())
fit <- glm(status~a+b+d.fact+f.fact+g+i+k+l+m, family = binomial())
summary(fit)
fit <- glm(status~a+b+factor(d)+factor(f)+g+i+k+l+m, family=binomial)
summary(fit)
rm(fit)
rm(a, b, d, d.fact, f, f.fact, g, i, k, l, m, status)
#factor
status <- c(LogisticR$status)
a <- c(LogisticR$A)
b <- c(LogisticR$B)
d <- c(LogisticR$D)
d.fact = factor(d)
rm(a, b, d, d.fact, status)
#factor
status <- c(LogisticR$status)
a <- c(LogisticR$A)
b <- c(LogisticR$B)
d <- c(LogisticR$D)
LogisticR$d.fact = factor(d)
f <- c(LogisticR$F)
LogisticR$f.fact = factor(f)
g <- c(LogisticR$G)
i <- c(LogisticR$I)
k <- c(LogisticR$K)
l <- c(LogisticR$L)
m <- c(LogisticR$M)
#logistic
summary(glm(status~a+b+d.fact+f.fact+g+i+k+l+m, data=LogisticR, family=binomial))
d.fact <- c(LogisticR$d.fact)
f.fact <- c(LogisticR$f.fact)
summary(glm(status~a+b+d.fact+f.fact+g+i+k+l+m, data=LogisticR, family=binomial))
library(readr)
OneWayAnovaR <- read_csv("Desktop/R_sc/OneWayAnovaR.csv")
View(OneWayAnovaR)
#set dataset
data <- OneWayAnovaR
levels(data$group)
levels(data$fertilizer)
rm(data)
rm(OneWayAnovaR)
library(readr)
OneWayAnovaR <- read_csv("Desktop/R_sc/OneWayAnovaR.csv")
View(OneWayAnovaR)
#import data
data <- OneWayAnovaR
x <- data$height
y <- data$fertilizer
#ANOVA
summary(aov(y~x))
model <- aov(y~x)
rm(data)
rm(OneWayAnovaR)
rm(x)
rm(y)
library(readr)
OneWayAnovaR <- read_csv("Desktop/R_sc/OneWayAnovaR.csv")
View(OneWayAnovaR)
#import data
data <- OneWayAnovaR
x <- data$height
y <- data$fertilizer
is.factor(y)
is.factor(x)
rm(data)
rm(OneWayAnovaR)
rm(x)
rm(y)
library(readr)
OneWayAnovaR_2 <- read_csv("Desktop/R_sc/OneWayAnovaR_2.csv")
View(OneWayAnovaR_2)
#import modified data
maple <- OneWayAnovaR_2
boxplot(height~Fert, data=maple, main=toupper("Maple Seedling Growth"),
xlab="Fertilizer", ylab="Height")
height <- maple$Height
fert <- maple$FertA+FertB+FertC
rm(maple)
rm(OneWayAnovaR_2)
rm(height)
library(readr)
OneWayAnovaR <- read_csv("Desktop/R_sc/OneWayAnovaR.csv")
View(OneWayAnovaR)
#import
maple <- OneWayAnovaR
fert <- maple$fertilizer
height <- maple$height
boxplot(height~fert)
boxplot(height~fert, data=maple, main=toupper("Growth"),
font.main=3, cex.main=1.2, xlab="Fertilizer Type",
ylab="Height", font.lab=3, col="darkgreen")
#ANOVA
anova <- aov(height~fert, data=maple)
summary(anova)
#tk <- TukeyHSD(anova)
tk
#tk <- TukeyHSD(anova)
TukeyHSD(anova)
rm(anova)
rm(maple)
rm(OneWayAnovaR)
rm(fert)
rm(height)
library(readr)
TwoWayAnovaR <- read_csv("Desktop/R_sc/TwoWayAnovaR.csv")
View(TwoWayAnovaR)
#twoway
mpi <- TwoWayAnovaR
sexo <- TwoWayAnovaR$Sex
Geno <- TwoWayAnovaR$Gentoype
Enzo <- TwoWayAnovaR$Enzyme
anova(Enzo~Geno•sexo, data(mpi))
anova(Enzo~ Geno * sexo, data(mpi))
model1 <- aov(Enzo~Geno + sexo, data=mpi)
summary(model1)
model1 <- aov(Enzo~Geno + sexo + Geno:sexo, data=mpi)
summary(model1)
view(mpi)
View(TwoWayAnovaR)
rm(model1)
rm(mpi)
model(TwoWayAnovaR)
rm(TwoWayAnovaR)
rm(Enzo)
rm(Geno)
rm(sexo)
library(readr)
AncovaR <- read_csv("Desktop/R_sc/AncovaR.csv")
View(AncovaR)
#import anvoca
install.packages(tidyverse)
#import anvoca
install.packages("ggplot2")
rm(AncovaR)
library(readr)
AncovaR <- read_csv("Desktop/R_sc/AncovaR.csv")
View(AncovaR)
#import anvoca
library(ggplot2)
#ggplot
>myplot <- ggplot(mydata, aes(x=logBODYL, y=logHL, col=Sex) )
#ggplot
myplot <- ggplot(mydata, aes(x=logBODYL, y=logHL, col=Sex) )
#ggplot
myplot <- ggplot(AncovaR, aes(x=logBODYL, y=logHL, col=Sex) )
#ggplot
GG <- ggplot(AncovaR, aes(x=logBODYL, y=logHL, col=Sex) )
GG + geom_point() + geom_smooth(method = “lm”, se = FALSE)
GG + geom_point() + geom_smooth(method ="lm", se = FALSE)
#ANCOVA
hl <- AncovaR$logHL
bl <- AncovaR$logBODYL
sex <- AncovaR$Sex
anc <- aov(hl~bl+sex, data=AncovaR)
Anova(anc, type="III")
summary(anc)
summary(anc)
library(readr)
AncovaR <- read_csv("Desktop/R_sc/AncovaR.csv")
View(AncovaR)
ancova <- AncovaR
sex <- AncovaR$Sex
body <- AncovaR$logBODYL
head <- AncovaR$logHL
first <- aov(head~sex+body)
second <- aov(head~sex * body)
print(anova(first, second))
results <- lm(head~sex+body+sex * body, data= AncovaR)
anova(results)
library(readr)
Book1 <- read_csv("Desktop/Book1.csv")
View(Book1)
va <- Book1$VA
nt <- Book1$NT
t.test(va, nt, paired = TRUE)
install.packages("readr")
install.packages("tidyr")
install.packages("broom")
install.packages("ggplot2")
install.packages("ggExtra")
install.packages("RColorBrewer")
library(readr)
library(tidyr)
library(dplyr)
library(readr)
install.packages("pillar")
install.packages("pillar")
library(readr)
help(pillar)
install.packages(readr)
install.packages("readr")
library(readr)
>data(list)
data(list)
data("PlantGrowth"
)
setwd("~/Desktop/SCW/Lesson2_IntroToR")
3+5
sqrt(64)
#my first R command
Print("Good Morning")
print(Good morning)
print("Good Morning")
name <- "jane"
price <- "3.99"
print(price)
list()
ls
ls()
rm(price)
ls()
mass<- 47.5
age<- 122
mass <- mass*2.3
age<- age-20
height<- height+20
mass <- 47.5
age <- 122
mass <- mass*2.3
age <- age-20
height <- height+20
sqrt(64)
res <- sqrt(mass)
mass <- 64
res<-sqrt(mass)
print(res)
install.packages(knitr)
install.packages("knitr")
library(knitr)
install.packages("knitr")
library(knitr)
score <-79
typeof(score)
score<- 79L
typeof(score)
install.packages("markdown")
install.packages(knitr)
install.packages("knitr")
install.packages("knitr")
typeof(score)
is.integer(score)
typeof(is.integer(score))
score<-79
is.logical(is.numeric(typeof(is.integer(score)))
is.integer(score)
is.integer("score"
)
v<-c(4,5,6)
length(v)
v<-c(1:3, 45)
length(v)
str(v)
head(v, n=2)
tail(v, n=2)
#manipulate the vector
v <- c(v, 56)
str(v)
m<- matrix(c(1:18), 3,6)
m
dim(m)
cont<- factor(c("asia", "europe", "america", "africa", "oceana"))
str(cont)
l<- list("Afghanistan", 1952, 88787)
print(l)
str(l)
menuitems<- c("chicken", "soup", "salad", "tea")
menuttypes<- factor("solid", "liquid", "solid", "liquid"
)
menucost<0 c(4.99, 2.99, 3.29, 1.89)
menucost<- c(4.99, 2.99, 3.29, 1.89)
myorder<- list(menuitems, menuttypes, menucost)
str(myorder)
print(myorder)
menuttypes<- factor("solid", "liquid", "solid", "liquid")
print(myorder)
myorder<- list(menuitems, menuttypes, menucost)
print(myorder)
menuttypes<- factor(c("solid", "liquid", "solid", "liquid"))
myorder<- list(menuitems, menuttypes, menucost)
print(myorder)
myorder_df<-data.frame(menuitems, menutypes, menucost)
menutypes<- factor(c("solid", "liquid", "solid", "liquid"))
print(myorder)
myorder<- list(menuitems, menuttypes, menucost)
print(myorder)
myorder_df<-data.frame(menuitems, menutypes, menucost)
print(myorder_df)
v<-c(2:10)
v(2)
v[2]
v[c(3:6)]
v[-c(3:6)]
myorder[1]
myorder_df[1:3, ]
myorder_df$menutypes
x<-myorder_df$menutypes
x
v<-c(1,5,3,4,5)
v1<- v[v==5]
v1
v==5
df1<-myorder_df[myorder_df$menutypes=="solid", ]
df1
df2<-myorder_df[myorder_df$menucost>3, ]
df2
read.table("gapminder.txt", header=TRUE
read.table("gapminder.txt", header=TRUE)
read.table("gapminder.txt", header="true")
read.table("gapminder.txt", header = TRUE)
data<-read.table("gapminder.txt", header = TRUE)
head(data)
str(data)
typeof(data)
data[,c(3,5)]
x1<-data[,c(3,5)]
head(x1)
data[data$country=="Sweden", ]
unique(data[,1])
data[data$lifeExp<70,]
x2<-data[data$lifeExp<70,]
head(x2)
myDataFull <- read.table("gapminder.txt", header = TRUE)
# select data from Canada
canada<- data[data$country=="Canada", ]
# select data from Canada
Canada<- data[data$country=="Canada", ]
View(canada)
# select data from Canada
Canada<- myDataFull[myDataFull$country=="Canada", ]
# plot life exp
plot(Canada$year, Canada$lifeExp)
# plot life exp
plot(Canada$year, Canada$lifeExp, type = "l")
# plot life exp
plot(Canada$year, Canada$lifeExp, type = "l", col= "blue")
source("PlotLifeExp.R")
source("PlotLifeExp.R")
source("PlotLifeExp.R")
source("PlotLifeExp.R")
# plot life exp
plot(Canada$year, Canada$lifeExp, type = "l", col= "blue")
# plot life exp
plot(Canada$year, Canada$lifeExp, type = "l", col= "blue")
source("PlotLifeExp.R")
plot(Canada$year, Canada$lifeExp, type = "l", col= "blue")
source("PlotLifeExp.R")
source("PlotLifeExp.R")
png("Canada.png")
dev.off()
png("Canada.png")
png("Canada.png")
dev.off()
png("Canada.png")
dev.off()
plot(Canada$year, Canada$lifeExp, type = "l", col= "blue")
dev.off()
png("Canada.png")
# select data from Canada
Canada<- myDataFull[myDataFull$country=="Canada", ]
png("Canada.png") # opening a png device to write plot to
plot(Canada$year, Canada$lifeExp, type = "l", col= "blue")
